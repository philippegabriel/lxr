#
#	LXR nginx server configuration
#

		#######################################
		# server - defines general parameters #
		#######################################
#
# IMPORTANT!
#	If LXR is offered as part of an existing server defined in another
#	configuration file, DO NOT use this one.
#	Instead, extract the location paragraphs and transfer them into
#	that other configuration file.
#
#	Servers are considered identical (and thus conflict) if they
#	have the same name and operate on the same port.

server {
	listen       80;		# server port
#	Other ports for this server
#	NOTE: remove duplicates since they cause trouble
	listen       80;
#@here_ports:

	server_name  lxr.xs.citrite.net
	             10.80.16.85
	;
#@here_hosts:

	# If SSI (server-side includes) are needed,
	# uncomment the following line.
	# But, BEWARE, #include semantics is different from Apache or lighttpd
#	ssi on;

		# locations tell how to route URLs #
		#==================================#

#	The following images are not needed by LXR, but included just in case
#	you want to display them in header or footer.

    location ~ nginx-logo.png$ {
        alias   /usr/share/nginx/html/nginx-logo.png;
    }
    location ~ poweredby.png$ {
        alias   /usr/share/nginx/html/poweredby.png;
    }

#	The error page definitions are copied from nginx's default.conf.
#	They do use the previous images.
#	Normally, not needed by LXR.

    error_page  404				404.html;
    location = /404.html {
        root   /usr/share/nginx/html;
    }
    error_page  500 502 503 504	/50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

# ============================================================
#
#		# LXR scripts activation #
#		#========================#
#
#	This location directive manages both the virtual root and tree
#	(in multiple trees context) identifications. It is configured
#	for the built-in policy where tree designation is put after the
#	virtual root in the URL as (remember that location's omit the
#	"scheme", hostname and port):
#
#	/virtual_root/tree/script/arguments   for "embedded" case
#	/virtual_root/script/arguments        other cases
#
#	Pattern matching is used to isolate the different components:
#	^     virtrootbase /   [^/]+  /  (.*)    $
#	start ----root----   treename   URLtail end
#
#	If you don't use the built-in policy, you must adapt the following
#	regular expression to your needs.

	location ~ ^/(.*)$
	{
#
#	Next, we must handle differently "ordinary" files (like stylesheets
#	or images) and scripts files.
# 	This alias directive serves the ordinary files.
#	Note we don't use root directive because we must replace the head
#	part of the path.
		alias /lxr/lxr-2.0.2/$1;

#	Script files will be handled by FastCGI.
#	Scripts are first identified by a more specific regular expression
#	whose head is similar to the previous one. See above for its structure
#	and the warning about the multiple trees policy.

		location ~ ^(/)(diff|ident|search|showconfig|source)
		{
			set $virtroot    $1;
			set $script_name $2;
			gzip off; #gzip makes scripts feel slower since they have to complete before getting gzipped
			alias /lxr/lxr-2.0.2/;
		# Create FastCGI environment for LXR scripts
			include fastcgi.conf;
			fastcgi_split_path_info   (diff|ident|search|showconfig|source)(.*)$;
				# nginx bug? fastcgi.conf sets SERVER_NAME to $server_name,
				# but this variable is equal to first name on server_name
				# directive.
				# However, this fix is not bullet-proof: $host is equal to value
				# of HTTP header Host: if it exists, otherwise it reverts
				# to $server_name.
				# Consequently, there are residual cases where the correct
				# hostname is not captured and CSS stylesheets and icons
				# are not retrieved.
			fastcgi_param SERVER_NAME      $host;
			fastcgi_param SCRIPT_FILENAME  $document_root$script_name;
			fastcgi_param SCRIPT_NAME      $virtroot$script_name;
			fastcgi_param PATH_INFO        $fastcgi_path_info;
			fastcgi_pass  unix:/var/run/fcgiwrap.socket;
		}
	}
#@here_sections:
#
# ============================================================

#	Close server definition
}
